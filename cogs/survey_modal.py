import discord
from discord import ui
from discord.ui import Modal, TextInput
import json
from pathlib import Path
from utils.user_data import get_user_data, save_user_data

CONFIG_FILE = "data/survey_config.json"

class SurveyModal(Modal, title="üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã"):
    name = TextInput(
        label="–ò–º—è / –ü—Å–µ–≤–¥–æ–Ω–∏–º",
        placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
        required=True,
        max_length=100
    )
    age = TextInput(
        label="–í–æ–∑—Ä–∞—Å—Ç",
        placeholder="–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç",
        required=True,
        max_length=20
    )
    creativity = TextInput(
        label="–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
        placeholder="–ß–µ–º –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å?",
        required=True,
        max_length=250
    )
    about = TextInput(
        label="–û —Å–µ–±–µ",
        style=discord.TextStyle.paragraph,
        placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ (–º–∏–Ω–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤)",
        required=True,
        min_length=100,
        max_length=2000
    )
    socials = TextInput(
        label="–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
        placeholder="–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
        required=False,
        max_length=500
    )

    async def on_submit(self, interaction: discord.Interaction):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_data = get_user_data(interaction.user.id)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∫–µ—Ç—É
            survey_data = {
                "name": self.name.value,
                "age": self.age.value,
                "creativity": self.creativity.value,
                "about": self.about.value,
                "socials": self.socials.value if self.socials.value else "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                "status": "pending",
                "timestamp": interaction.created_at.isoformat()
            }

            if "surveys" not in user_data:
                user_data["surveys"] = {"current": None, "history": []}
            
            user_data["surveys"]["current"] = survey_data
            user_data["surveys"]["history"].append(survey_data)
            save_user_data(interaction.user.id, user_data)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
            with open(CONFIG_FILE, "r", encoding="utf-8") as f:
                config = json.load(f)
            
            mod_channel = interaction.client.get_channel(int(config["–º–æ–¥–µ—Ä–∞—Ü–∏—è"]))
            if mod_channel:
                embed = discord.Embed(
                    title="üì• –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
                    color=discord.Color.orange()
                )
                embed.add_field(name="–ò–º—è", value=self.name.value, inline=False)
                embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=self.age.value, inline=False)
                embed.add_field(name="–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ", value=self.creativity.value, inline=False)
                embed.add_field(name="–û —Å–µ–±–µ", value=self.about.value[:500] + "..." if len(self.about.value) > 500 else self.about.value, inline=False)
                embed.add_field(name="–°–æ—Ü—Å–µ—Ç–∏", value=self.socials.value if self.socials.value else "‚Äî", inline=False)
                embed.set_footer(text=f"–û—Ç–ø—Ä–∞–≤–∏–ª: {interaction.user.display_name}", icon_url=interaction.user.display_avatar.url)

                view = SurveyModerationView(interaction.user.id)
                await mod_channel.send(embed=embed, view=view)
                await interaction.response.send_message("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!", ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω", ephemeral=True)

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã", ephemeral=True)

class SurveyModerationView(discord.ui.View):
    def __init__(self, user_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id

    @discord.ui.button(label="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", style=discord.ButtonStyle.success, custom_id="approve_survey")
    async def approve(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –õ–æ–≥–∏–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è
        user_data = get_user_data(self.user_id)
        if not user_data or "surveys" not in user_data:
            return await interaction.response.send_message("‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", ephemeral=True)

        user_data["surveys"]["current"]["status"] = "approved"
        save_user_data(self.user_id, user_data)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞–Ω–∞–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        with open(CONFIG_FILE, "r", encoding="utf-8") as f:
            config = json.load(f)
        
        pub_channel = interaction.client.get_channel(int(config["–ø—É–±–ª–∏–∫–∞—Ü–∏—è"]))
        if pub_channel:
            embed = discord.Embed(
                title="üìù –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
                color=discord.Color.green()
            )
            survey = user_data["surveys"]["current"]
            embed.add_field(name="–ò–º—è", value=survey["name"], inline=False)
            embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=survey["age"], inline=False)
            embed.add_field(name="–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ", value=survey["creativity"], inline=False)
            embed.add_field(name="–û —Å–µ–±–µ", value=survey["about"][:500] + "..." if len(survey["about"]) > 500 else survey["about"], inline=False)
            embed.add_field(name="–°–æ—Ü—Å–µ—Ç–∏", value=survey["socials"], inline=False)
            
            msg = await pub_channel.send(embed=embed)
            await msg.add_reaction("‚ù§Ô∏è")
            await interaction.response.send_message("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω", ephemeral=True)

    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id="reject_survey")
    async def reject(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(RejectionReasonModal(self.user_id))

class RejectionReasonModal(Modal, title="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è"):
    reason = TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=1000
    )

    def __init__(self, user_id: int):
        super().__init__()
        self.user_id = user_id

    async def on_submit(self, interaction: discord.Interaction):
        user_data = get_user_data(self.user_id)
        if not user_data or "surveys" not in user_data:
            return await interaction.response.send_message("‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", ephemeral=True)

        user_data["surveys"]["current"]["status"] = "rejected"
        user_data["surveys"]["current"]["rejection_reason"] = self.reason.value
        save_user_data(self.user_id, user_data)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        user = await interaction.client.fetch_user(self.user_id)
        if user:
            try:
                embed = discord.Embed(
                    title="‚ùå –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                    color=discord.Color.red()
                )
                survey = user_data["surveys"]["current"]
                embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=self.reason.value, inline=False)
                embed.add_field(name="–ò–º—è", value=survey["name"], inline=False)
                embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=survey["age"], inline=False)
                embed.add_field(name="–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ", value=survey["creativity"], inline=False)
                embed.add_field(name="–û —Å–µ–±–µ", value=survey["about"], inline=False)
                embed.add_field(name="–°–æ—Ü—Å–µ—Ç–∏", value=survey["socials"], inline=False)
                
                await user.send(embed=embed)
                await interaction.response.send_message("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏", ephemeral=True)
            except discord.Forbidden:
                await interaction.response.send_message("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", ephemeral=True)