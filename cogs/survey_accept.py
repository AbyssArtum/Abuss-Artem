import discord
from discord.ext import commands
from discord import app_commands
import re
import json
from datetime import datetime

from utils.db import save_survey, get_survey_by_user, update_survey_status  # –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç

CONFIG_PATH = "config.json"
REACTION_EMOJI = "‚ù§Ô∏è"


def get_config_value(key):
    try:
        with open(CONFIG_PATH, "r", encoding="utf-8") as f:
            config = json.load(f)
        return config.get("–∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", {}).get(key)
    except FileNotFoundError:
        return None


class SurveyModal(discord.ui.Modal, title="üìî –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã"):
    name = discord.ui.TextInput(label="–ò–º—è / –ü—Å–µ–≤–¥–æ–Ω–∏–º", required=True, max_length=100)
    age = discord.ui.TextInput(label="–í–æ–∑—Ä–∞—Å—Ç", required=True, max_length=50)
    creative_fields = discord.ui.TextInput(label="–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", required=True, max_length=200)
    about = discord.ui.TextInput(
        label="–û —Å–µ–±–µ",
        style=discord.TextStyle.paragraph,
        required=True,
        min_length=100
    )
    socials = discord.ui.TextInput(label="–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏", required=False)

    async def on_submit(self, interaction: discord.Interaction):
        if re.search(r"[A-Za-z–ê-–Ø–∞-—è–Å—ë]", self.age.value.strip()):
            return await interaction.response.send_message(
                "‚ö†Ô∏è –í –ø–æ–ª–µ –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ–ª—å–∑—è –≤–≤–æ–¥–∏—Ç—å –±—É–∫–≤—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ —Å–∏–º–≤–æ–ª—ã.",
                ephemeral=True
            )

        save_survey(
            user_id=interaction.user.id,
            name=self.name.value,
            age=self.age.value,
            creative_fields=self.creative_fields.value,
            about=self.about.value,
            socials=self.socials.value if self.socials.value else None
        )

        moderation_channel_id = get_config_value("–∫–∞–Ω–∞–ª_–º–æ–¥–µ—Ä–∞—Ü–∏–∏")
        if not moderation_channel_id:
            return await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.", ephemeral=True)

        channel = interaction.client.get_channel(int(moderation_channel_id))
        if channel is None:
            return await interaction.response.send_message("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –º–æ–¥–µ—Ä–∞—Ü–∏–∏.", ephemeral=True)

        embed = discord.Embed(title="üì• –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏", color=discord.Color.orange())
        embed.add_field(name="–ò–º—è / –ü—Å–µ–≤–¥–æ–Ω–∏–º", value=self.name.value, inline=False)
        embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=self.age.value, inline=False)
        embed.add_field(name="–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", value=self.creative_fields.value, inline=False)
        embed.add_field(name="–û —Å–µ–±–µ", value=self.about.value, inline=False)
        embed.add_field(name="–°–æ—Ü—Å–µ—Ç–∏", value=self.socials.value if self.socials.value else "‚Äî", inline=False)
        embed.set_footer(text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {interaction.user.display_name}", icon_url=interaction.user.display_avatar.url)

        view = ModerationButtons(interaction.user)
        await channel.send(embed=embed, view=view)
        await interaction.response.send_message("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!", ephemeral=True)


class ModerationButtons(discord.ui.View):
    def __init__(self, author):
        super().__init__(timeout=None)
        self.author = author

    @discord.ui.button(label="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", style=discord.ButtonStyle.success)
    async def approve(self, interaction: discord.Interaction, button: discord.ui.Button):
        publication_channel_id = get_config_value("–∫–∞–Ω–∞–ª_–ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
        if not publication_channel_id:
            return await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.", ephemeral=True)

        data = get_survey_by_user(self.author.id)
        if not data:
            return await interaction.response.send_message("‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)

        channel = interaction.client.get_channel(int(publication_channel_id))
        if channel is None:
            return await interaction.response.send_message("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.", ephemeral=True)

        embed = discord.Embed(title="üìù –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞", color=discord.Color.purple())
        embed.add_field(name="–ò–º—è / –ü—Å–µ–≤–¥–æ–Ω–∏–º", value=data["name"], inline=False)
        embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=data["age"], inline=False)
        embed.add_field(name="–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", value=data["creative_fields"], inline=False)
        embed.add_field(name="–û —Å–µ–±–µ", value=data["about"], inline=False)
        embed.add_field(name="–°–æ—Ü—Å–µ—Ç–∏", value=data["socials"] if data["socials"] else "‚Äî", inline=False)
        embed.set_footer(text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {self.author.display_name}")

        msg = await channel.send(embed=embed)
        await msg.add_reaction(REACTION_EMOJI)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–Ω–∫–µ—Ç—ã
        update_survey_status(self.author.id, "approved")
        await interaction.response.send_message("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞.", ephemeral=True)

    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def reject(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã
        data = get_survey_by_user(self.author.id)
        if not data:
            return await interaction.response.send_message("‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        modal = RejectReasonModal()
        await interaction.response.send_modal(modal)
        await modal.wait()

        if not modal.reason:
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∫–µ—Ç–æ–π
        message = (
            "**–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.**\n"
            f"–ü—Ä–∏—á–∏–Ω–∞: {modal.reason}\n\n"
            "## –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã:\n"
            f"### –ò–º—è / –ü—Å–µ–≤–¥–æ–Ω–∏–º\n{data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
            f"### –í–æ–∑—Ä–∞—Å—Ç\n{data.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
            f"### –í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n{data.get('creative_fields', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
            f"### –û —Å–µ–±–µ\n{data.get('about', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
            f"### –°–æ—Ü—Å–µ—Ç–∏\n{data.get('socials', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—ë –∑–∞–Ω–æ–≤–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `/–∞–Ω–∫–µ—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å`"
        )

        try:
            await self.author.send(message)
        except discord.Forbidden:
            await interaction.followup.send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –õ–°.", ephemeral=True)
        else:
            await interaction.followup.send("‚ùå –ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", ephemeral=True)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–Ω–∫–µ—Ç—ã
        update_survey_status(self.author.id, "rejected", modal.reason)


class RejectReasonModal(discord.ui.Modal, title="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è"):
    reason = discord.ui.TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=500
    )

    def __init__(self):
        super().__init__()
        self.reason = None

    async def on_submit(self, interaction: discord.Interaction):
        self.reason = self.reason.value
        await interaction.response.defer()


class SurveyCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="–∞–Ω–∫–µ—Ç–∞", description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—É")
    @app_commands.describe(
        –¥–µ–π—Å—Ç–≤–∏–µ="–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å",
        —É—á–∞—Å—Ç–Ω–∏–∫="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á—å—é –∞–Ω–∫–µ—Ç—É –Ω—É–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
    )
    @app_commands.choices(
        –¥–µ–π—Å—Ç–≤–∏–µ=[
            app_commands.Choice(name="—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", value="—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
            app_commands.Choice(name="–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", value="–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
        ]
    )
    async def –∞–Ω–∫–µ—Ç–∞(
        self,
        interaction: discord.Interaction,
        –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str],
        —É—á–∞—Å—Ç–Ω–∏–∫: discord.User = None
    ):
        if –¥–µ–π—Å—Ç–≤–∏–µ.value == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å":
            await interaction.response.send_modal(SurveyModal())
        elif –¥–µ–π—Å—Ç–≤–∏–µ.value == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å":
            user = —É—á–∞—Å—Ç–Ω–∏–∫ or interaction.user
            data = get_survey_by_user(user.id)

            if not data:
                return await interaction.response.send_message("‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)

            status = data.get("status", "–Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏")
            status_emoji = "‚úÖ" if status == "approved" else "‚ùå" if status == "rejected" else "üïí"
            
            embed = discord.Embed(
                title=f"{status_emoji} –ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.display_name}",
                color=discord.Color.green() if status == "approved" else discord.Color.red() if status == "rejected" else discord.Color.orange()
            )
            embed.add_field(name="–ò–º—è / –ü—Å–µ–≤–¥–æ–Ω–∏–º", value=data["name"], inline=False)
            embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=data["age"], inline=False)
            embed.add_field(name="–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", value=data["creative_fields"], inline=False)
            embed.add_field(name="–û —Å–µ–±–µ", value=data["about"], inline=False)
            embed.add_field(name="–°–æ—Ü—Å–µ—Ç–∏", value=data["socials"] if data["socials"] else "‚Äî", inline=False)
            
            if status == "rejected" and data.get("reject_reason"):
                embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è", value=data["reject_reason"], inline=False)
                
            embed.set_footer(text=f"–°—Ç–∞—Ç—É—Å: {'–æ–¥–æ–±—Ä–µ–Ω–∞' if status == 'approved' else '–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞' if status == 'rejected' else '–Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏'}")

            await interaction.response.send_message(embed=embed, ephemeral=True)


async def setup(bot):
    await bot.add_cog(SurveyCog(bot))